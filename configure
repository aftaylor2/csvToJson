#!/bin/bash

# Variables
CC=gcc
CFLAGS="-Wall -Wextra -pedantic -std=c99"
LDFLAGS="-lcurl"
TARGET="bin/csvToJSON"
SRC="src/csvToJSON.c src/csvToJSON_lib.c"
TEST_TARGET="bin/test_csvToJSON"
TEST_SRC="src/test_csvToJSON.c src/csvToJSON_lib.c"

# Function to check for the existence of a program
check_program() {
	command -v $1 >/dev/null 2>&1 || {
		echo >&2 "$1 is required but it's not installed. Aborting."
		exit 1
	}
}

# Check for gcc
check_program gcc

# Check for curl development libraries
check_program curl-config

# Get curl compiler and linker flags
CURL_CFLAGS=$(curl-config --cflags)
CURL_LDFLAGS=$(curl-config --libs)

# Create Makefile
cat <<EOL >Makefile
# Makefile generated by configure script

# Variables
CC = $CC
CFLAGS = $CFLAGS $CURL_CFLAGS
LDFLAGS = $LDFLAGS $CURL_LDFLAGS
TARGET = $TARGET
SRC = $SRC
TEST_TARGET = $TEST_TARGET
TEST_SRC = $TEST_SRC

# Default target
all: \$(TARGET) \$(TEST_TARGET)

# Build target
\$(TARGET): \$(SRC)
	\$(CC) \$(CFLAGS) -o \$(TARGET) \$(SRC) \$(LDFLAGS)

# Build test target
\$(TEST_TARGET): \$(TEST_SRC)
	\$(CC) \$(CFLAGS) -o \$(TEST_TARGET) \$(TEST_SRC) \$(LDFLAGS)

# Run tests
test: \$(TEST_TARGET)
	./\$(TEST_TARGET)

# Clean target
clean:
	rm -f \$(TARGET) \$(TEST_TARGET)

# Phony targets
.PHONY: all clean test
EOL

echo "Configuration complete. You can now run 'make' to build the program."
